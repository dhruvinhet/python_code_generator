import webbrowser
import sys
import os

def install_requirements():
    """Installs project dependencies."""
    try:
        subprocess.check_call([sys.executable, "-m", "pip", "install", "-r", "requirements.txt"])
        print("Dependencies installed successfully.")
    except subprocess.CalledProcessError as e:
        print(f"Error installing dependencies: {e}")
        sys.exit(1)

def start_backend():
    """Starts the backend server."""
    try:
        # Replace with your backend startup command
        subprocess.Popen(["python", "backend/app.py"], cwd=".", stdout=subprocess.PIPE, stderr=subprocess.PIPE)  
        print("Backend server started.")
    except FileNotFoundError:
        print("Error: backend/app.py not found.  Ensure your backend is correctly set up.")
        sys.exit(1)
    except Exception as e:
        print(f"Error starting backend server: {e}")
        sys.exit(1)


def start_frontend():
    """Starts the frontend development server."""
    try:
        # Replace with your frontend startup command (e.g., npm start, yarn start)
        # Adjust path to your frontend directory
        subprocess.Popen(["npm", "start"], cwd="frontend", stdout=subprocess.PIPE, stderr=subprocess.PIPE)
        print("Frontend development server started.")
    except FileNotFoundError:
        print("Error: npm start failed. Ensure Node.js and npm are installed and you're in the correct frontend directory.")
        sys.exit(1)
    except Exception as e:
        print(f"Error starting frontend server: {e}")
        sys.exit(1)


def open_browser(url="http://localhost:3000"): # Adjust port as needed
    """Opens the application in the browser."""
    try:
        webbrowser.open(url)
        print(f"Opened application in browser at {url}")
    except Exception as e:
        print(f"Error opening browser: {e}")



def main():
    """Main function to run the project."""
    install_requirements()
    start_backend()
    start_frontend()
    open_browser()


if __name__ == "__main__":
    main()